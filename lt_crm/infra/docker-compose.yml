version: '3.8'

services:
  web:
    build:
      context: ..
      dockerfile: infra/Dockerfile
    environment:
      - FLASK_APP=app
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-password}@postgres:5432/lt_crm
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - BABEL_DEFAULT_LOCALE=lt_LT
      - BABEL_DEFAULT_TIMEZONE=Europe/Vilnius
      - SECRET_KEY=${SECRET_KEY:-dev}
      - SENTRY_DSN=${SENTRY_DSN:-}
      - PROMETHEUS_MULTIPROC_DIR=/tmp/prometheus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    volumes:
      - ../:/app
      - prometheus_multiproc:/tmp/prometheus
    restart: unless-stopped
    expose:
      - "8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  worker:
    build:
      context: ..
      dockerfile: infra/Dockerfile
    command: celery -A app.celery_worker:celery worker --loglevel=info
    environment:
      - FLASK_APP=app
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-password}@postgres:5432/lt_crm
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - BABEL_DEFAULT_LOCALE=lt_LT
      - BABEL_DEFAULT_TIMEZONE=Europe/Vilnius
      - SECRET_KEY=${SECRET_KEY:-dev}
      - SENTRY_DSN=${SENTRY_DSN:-}
    volumes:
      - ../:/app
    restart: unless-stopped
    depends_on:
      - redis
      - postgres

  beat:
    build:
      context: ..
      dockerfile: infra/Dockerfile
    command: celery -A app.celery_worker:celery beat --loglevel=info
    environment:
      - FLASK_APP=app
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-password}@postgres:5432/lt_crm
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - BABEL_DEFAULT_LOCALE=lt_LT
      - BABEL_DEFAULT_TIMEZONE=Europe/Vilnius
      - SECRET_KEY=${SECRET_KEY:-dev}
      - SENTRY_DSN=${SENTRY_DSN:-}
    volumes:
      - ../:/app
    restart: unless-stopped
    depends_on:
      - worker
      - redis

  postgres:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_USER=postgres
      - POSTGRES_DB=lt_crm
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  redis:
    image: redis:alpine
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - /mnt:/app/static
    depends_on:
      - web
    restart: unless-stopped
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    restart: unless-stopped
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on:
      - nginx

volumes:
  postgres_data:
  redis_data:
  prometheus_multiproc: 